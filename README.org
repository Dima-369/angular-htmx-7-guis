* Angular and HTMX solutions to 7 GUIs

Solutions to this: https://eugenkiss.github.io/7guis/tasks/

[[https://github.com/Dima-369/angular-htmx-7-guis/blob/master/screenshots/1.png?raw=true]]

** Infos

Note that the Angular code assumes that the Java Sprint Boot server runs at http://localhost:8083 - but if it is not running, that's fine as well; the pure Angular components will still work just fine.

In development, I develop the Angular version first to have the UI going and then I jump into =Intellij= and code the entire backend solution over there. The HTMX is initiated like this, for example in =src/app/flight-booker-htmx/flight-booker-htmx.component.html=:

#+begin_src html
<form class="flex items-center" id="div-flight-booker"
      hx-get="http://localhost:8083/flight-booker-update"
      hx-trigger="load">
</form>
#+end_src

HTMX is not optimal for the 7 GUI tasks, as each user interactions triggers a network call to the Java backend and returns HTML. The HTMX solutions are generally slower in the millisecond range compared to the pure Angular ones, but the delay is minimal, at least when the server is accessed through localhost.

Nevertheless, I personally find the pure HTMX solutions more enjoyable, as working with Java is fun!

* Java backend server for HTMX

The backend uses Spring Boot 3.1.5, Java 17, Gradle and Thymeleaf 3.1.2 and starts on port 8083 when launched.

Apparently, I was not able to get Hot Reload going with the backend server. Maybe it is not possible in Intellij Community Edition? So, I have to restart the server on any change to test it out which is a bit annoying.

* TODOs

- deploy Angular on Github Pages with CI?
- show demo screenshots or videos?
- finish all tasks (3/7 done)
- add tests for the non HTMX Components
- brush over DRY principal everywhere
